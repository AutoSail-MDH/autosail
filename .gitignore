# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app

# PYTHON

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/


# ROS
# Lines that start with '#' are comments.
# ignore objects and libraries
*.o
*.a
*.d
*.so
*.lo
*.la
# ignore python compiled files:
*.pyc
# ignore gcov files
*.gcda
*.gcno
*.gcov
# ignore tag files
tags
# we don't care about vi swp files
*.swp
# we also don't care about emacs swap files
*~
.backup-*
# nothing in the root directory should be checked in.
root
# setup.bash is a generated file.
setup.bash
config.mk
# gcov files
*.gcno
*.gcov
# Testing output files
*.out
.build-version
.rospack_cache
*.tar.gz
3rdparty/cmake/build
3rdparty/cmake/cmake
3rdparty/cmake/cmake-2.6.0
3rdparty/numpy/build
3rdparty/numpy/numpy
3rdparty/numpy/src
3rdparty/tinyxml/build
3rdparty/xmlrpc++/build
bin/rosinstall
bin/roslaunch
bin/rosmap
bin/rosmaster
bin/rospack
bin/rosplay
bin/rosprereq
bin/rosrecord
bin/rostest
bin/svnmerge
core/experimental/roslisp/build
core/experimental/roslisp/lib
core/genmsg_cpp/build
core/genmsg_cpp/genmsg
core/genmsg_cpp/genmsg_lisp
core/genmsg_cpp/genmsgtest
core/genmsg_cpp/gensrv
core/genmsg_cpp/gensrv_lisp
core/genmsg_cpp/submsgs
core/rosconsole/build
core/rosconsole/examples/example
core/roscpp/build
core/roscpp/msg/cpp
core/roscpp/msg/lisp
core/roscpp/src/roscpp
core/roscpp/srv/cpp
core/roscpp/srv/lisp
core/rosout/build
core/rosout/rosout
core/rospack_test/build
core/rospy/build
core/rostime/build
core/rostools/build
core/rostools/msg/cpp
core/rostools/msg/lisp
core/rostools/src/rostools/msg
core/roslib/build
core/roslib/msg/cpp
core/roslib/msg/lisp
core/roslib/src/rostools/msg
demos/roscpp_demo/bin
demos/roscpp_demo/build
demos/rospy_demo/build
demos/rospy_demo/msg/cpp
demos/rospy_demo/msg/lisp
demos/rospy_demo/src/rospy_demo/msg
param/rosparam/build
param/shparam/build
param/shparam/shparam
param/xmlparam/build
param/xmlparam/xmlparam
std_msgs/build
std_msgs/msg/cpp
std_msgs/msg/lisp
std_msgs/src
std_srvs/build
std_srvs/src
std_srvs/srv/cpp
std_srvs/srv/lisp
test/gtest/build
test/gtest/gtest
test/gtest/gtest-1.0.1
test/param_setget/depend
test/param_setget/param_setget
test/performance/roscpp_msg_serdes/build
test/performance/roscpp_msg_serdes/pointcloud_serdes
test/rostest/build
test/test_ros/build
test/test_roscpp/bin
test/test_roscpp/build
test/test_roslaunch/build
test/test_ros/msg/cpp
test/test_ros/msg/lisp
test/test_rospy/build
test/test_rospy/msg/cpp
test/test_rospy/msg/lisp
test/test_rospy/src/test_rospy/msg
test/test_rospy/src/test_rospy/srv
test/test_rospy/srv/cpp
test/test_rospy/srv/lisp
test/test_ros/src/test_ros/msg
tools/rosinstall/build
tools/rosinstall/rosinstall
tools/roslaunch/build
tools/rosmap/depend
tools/rospack/depend
tools/rosprereq/depend
tools/rosrecord/bin
tools/rosrecord/build
tools/vizdeps/deps.gv
tools/vizdeps/deps.pdf
tutorials/roscpp_tutorials/bin
tutorials/roscpp_tutorials/build
tutorials/roscpp_tutorials/src
tutorials/roscpp_tutorials/srv/cpp
tutorials/roscpp_tutorials/srv/lisp
tutorials/rospy_tutorials/build
tutorials/rospy_tutorials/src
tutorials/rospy_tutorials/srv/cpp
tutorials/rospy_tutorials/srv/lisp
util/rosthread/build
.build_version
.rosgcov_files
3rdparty/gtest/gtest
/core/genmsg_cpp/genmsg_java
/core/genmsg_cpp/genmsg_oct
/core/genmsg_cpp/gensrv_java
/core/genmsg_cpp/gensrv_oct
/core/roslib/src/roslib


# VSCODE

.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace
build/
.vscode/
*.old

# Local History for Visual Studio Code
.history/
__pycache__
